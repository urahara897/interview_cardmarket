name: GitOps Deployment

on:
    push:
        branches: [main]
        paths:
            - "helm/**"
    workflow_dispatch:

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    gitops-sync:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Set up kubectl
              uses: azure/setup-kubectl@v3
              with:
                  version: "v1.28.0"

            - name: Create Kind cluster for GitOps
              uses: helm/kind-action@v1.8.0
              with:
                  cluster_name: gitops-cluster
                  config: |
                      kind: Cluster
                      apiVersion: kind.x-k8s.io/v1alpha4
                      nodes:
                      - role: control-plane
                        extraPortMappings:
                        - containerPort: 80
                          hostPort: 80
                          protocol: TCP
                        - containerPort: 30080
                          hostPort: 30080
                          protocol: TCP

            - name: Install ArgoCD
              run: |
                  kubectl create namespace argocd
                  kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
                  kubectl wait --for=condition=available deployment/argocd-server -n argocd --timeout=300s

            - name: Configure ArgoCD
              run: |
                  # Get ArgoCD admin password
                  kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d > argocd-password.txt
                  echo "ArgoCD admin password: $(cat argocd-password.txt)"

                  # Port forward ArgoCD server
                  kubectl port-forward -n argocd svc/argocd-server 8080:443 &
                  sleep 10

                  # Login to ArgoCD
                  argocd login localhost:8080 --username admin --password $(cat argocd-password.txt) --insecure

            - name: Create Application
              run: |
                  # Create ArgoCD application pointing to Helm chart
                  kubectl apply -f - <<EOF
                  apiVersion: argoproj.io/v1alpha1
                  kind: Application
                  metadata:
                    name: interview-app
                    namespace: argocd
                  spec:
                    project: default
                    source:
                      repoURL: https://github.com/${{ github.repository }}
                      targetRevision: HEAD
                      path: helm/interview-app
                      helm:
                        valueFiles:
                        - values.yaml
                    destination:
                      server: https://kubernetes.default.svc
                      namespace: default
                    syncPolicy:
                      automated:
                        prune: true
                        selfHeal: true
                      syncOptions:
                      - CreateNamespace=true
                  EOF

            - name: Wait for sync
              run: |
                  kubectl wait --for=condition=healthy application/interview-app -n argocd --timeout=300s

            - name: Verify deployment
              run: |
                  kubectl get applications -n argocd
                  kubectl get pods
                  kubectl get services

            - name: Generate GitOps report
              run: |
                  echo "## ðŸ”„ GitOps Deployment Report" >> $GITHUB_STEP_SUMMARY
                  echo "**GitOps Tool:** ArgoCD" >> $GITHUB_STEP_SUMMARY
                  echo "**Repository:** ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
                  echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "### Application Status:" >> $GITHUB_STEP_SUMMARY
                  kubectl get application interview-app -n argocd -o yaml >> $GITHUB_STEP_SUMMARY
