name: ArgoCD Status Check

on:
    workflow_dispatch:
    # Disable automatic runs since we need existing GitOps setup
    # schedule:
    #     - cron: "*/5 * * * *" # Every 5 minutes

jobs:
    check-argocd-status:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Kind
              uses: helm/kind-action@v1.8.0
              with:
                  cluster_name: gitops-cluster

            - name: Check if ArgoCD exists
              run: |
                  echo "Checking if ArgoCD is already installed..."
                  if kubectl get namespace argocd >/dev/null 2>&1; then
                      echo "ArgoCD namespace exists"
                      if kubectl get applications -n argocd >/dev/null 2>&1; then
                          echo "ArgoCD applications found"
                      else
                          echo "ArgoCD exists but no applications found"
                      fi
                  else
                      echo "ArgoCD not found - this status check needs an existing GitOps setup"
                      echo "Please run the GitOps Setup workflow first"
                      exit 1
                  fi

            - name: Check ArgoCD Application Status
              run: |
                  echo "=== ArgoCD Application Status ==="
                  kubectl get applications -n argocd -o wide

                  echo "=== Application Details ==="
                  kubectl describe application interview-app -n argocd

                  echo "=== Recent Sync Events ==="
                  kubectl get events -n argocd --sort-by='.lastTimestamp' | grep interview-app | tail -10

                  echo "=== Application Pods ==="
                  kubectl get pods -l app.kubernetes.io/name=interview-app -o wide

                  echo "=== Application Logs (Last 10 lines) ==="
                  kubectl logs -l app.kubernetes.io/name=interview-app --tail=10 || echo "No logs available"

                  echo "=== Deployment Image ==="
                  kubectl describe deployment interview-app | grep Image || echo "No deployment found"
